\connect sea_db

-- tables
-- Table: attribute_detail
CREATE TABLE attribute_detail
(
    id   int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100) NOT NULL,
    CONSTRAINT attribute_detail_pk PRIMARY KEY (id)
);

-- Table: audit_log_header
CREATE TABLE audit_log_header
(
    id         int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    date_time  timestamp   NOT NULL,
    table_name varchar(50) NOT NULL,
    row_pk     varchar(50) NOT NULL,
    username   varchar(50) NOT NULL,
    action     varchar(50) NOT NULL,
    CONSTRAINT audit_log_header_pk PRIMARY KEY (id)
);

-- Table: audit_log_value
CREATE TABLE audit_log_value
(
    id                  int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    column_name         varchar(50)  NOT NULL,
    previous_value      varchar(500) NULL,
    new_value           varchar(500) NULL,
    audit_log_header_id int          NOT NULL,
    CONSTRAINT audit_log_value_pk PRIMARY KEY (id)
);

CREATE INDEX audit_log_value_idx_1 on audit_log_value (audit_log_header_id ASC);

-- Table: brand
CREATE TABLE brand
(
    id   int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100) NOT NULL,
    CONSTRAINT brand_pk PRIMARY KEY (id)
);

-- Table: category
CREATE TABLE category
(
    id          int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name        varchar(100) NOT NULL,
    category_id int          NULL,
    CONSTRAINT category_pk PRIMARY KEY (id)
);

CREATE INDEX category_idx_1 on category (category_id ASC);

-- Table: company
CREATE TABLE company
(
    id      int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name    varchar(50)  NOT NULL,
    RUC     varchar(20)  NOT NULL,
    address varchar(50)  NOT NULL,
    email   varchar(50)  NOT NULL,
    phone_1 varchar(50)  NOT NULL,
    phone_2 varchar(50)  NULL,
    phone_3 varchar(50)  NULL,
    url     varchar(100) NULL,
    image   varchar(250) NOT NULL,
    CONSTRAINT company_pk PRIMARY KEY (id)
);

-- Table: currency_type
CREATE TABLE currency_type
(
    id       int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    currency varchar(20) NOT NULL,
    symbol   varchar(20) NOT NULL,
    CONSTRAINT currency_type_pk PRIMARY KEY (id)
);

-- Table: customer
CREATE TABLE customer
(
    id               int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    given_names      varchar(50) NULL,
    first_last_name  varchar(50) NULL,
    second_last_name varchar(50) NULL,
    document_type_id int         NULL,
    document_number  varchar(20) NULL,
    phone            varchar(20) NULL,
    address          varchar(50) NULL,
    is_active        boolean     NULL,
    CONSTRAINT customer_ak_1 UNIQUE (document_number) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT customer_ak_2 UNIQUE (phone) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT customer_pk PRIMARY KEY (id)
);

CREATE INDEX customer_idx_1 on customer (document_type_id ASC);

-- Table: data_sheet
CREATE TABLE data_sheet
(
    attribute_detail_id int          NOT NULL,
    product_id          int          NOT NULL,
    detail              varchar(100) NOT NULL,
    CONSTRAINT data_sheet_pk PRIMARY KEY (attribute_detail_id, product_id)
);

CREATE INDEX data_sheet_idx_1 on data_sheet (attribute_detail_id ASC);

CREATE INDEX data_sheet_idx_2 on data_sheet (product_id ASC);

-- Table: discount
CREATE TABLE discount
(
    id                      int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name                    varchar(50) NOT NULL,
    type_discount_id        int         NOT NULL,
    percentage              int         NULL,
    quantity                int         NULL,
    price                   money       NULL,
    valid_from              timestamp   NOT NULL,
    valid_until             timestamp   NOT NULL,
    minimum_order           int         NOT NULL,
    maximum_discount_amount money       NOT NULL,
    discount_limit          int         NOT NULL,
    category_id             int         NULL,
    product_id              int         NULL,
    is_active               boolean     NOT NULL,
    CONSTRAINT discount_pk PRIMARY KEY (id)
);

CREATE INDEX discount_idx_1 on discount (category_id ASC);

CREATE INDEX discount_idx_2 on discount (product_id ASC);

CREATE INDEX discount_idx_3 on discount (type_discount_id ASC);

-- Table: document_type
CREATE TABLE document_type
(
    id     int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    type   varchar(50) NOT NULL,
    length int         NOT NULL,
    CONSTRAINT document_type_ak_1 UNIQUE (type) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT document_type_pk PRIMARY KEY (id)
);

-- Table: employee
CREATE TABLE employee
(
    id               int         NOT NULL,
    given_names      varchar(50) NOT NULL,
    first_last_name  varchar(50) NOT NULL,
    second_last_name varchar(50) NOT NULL,
    gender_id        int         NOT NULL,
    document_type_id int         NOT NULL,
    document_number  varchar(20) NOT NULL,
    date_of_birth    date        NOT NULL,
    phone            varchar(20) NOT NULL,
    address          varchar(50) NOT NULL,
    nationality_id   int         NOT NULL,
    is_active        boolean     NOT NULL,
    CONSTRAINT employee_ak_1 UNIQUE (document_number) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT employee_ak_2 UNIQUE (phone) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT employee_pk PRIMARY KEY (id)
);

CREATE INDEX employee_idx_1 on employee (gender_id ASC);

CREATE INDEX employee_idx_2 on employee (document_type_id ASC);

CREATE INDEX employee_idx_3 on employee (nationality_id ASC);

-- Table: gender
CREATE TABLE gender
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT gender_ak_1 UNIQUE (name) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT gender_pk PRIMARY KEY (id)
);

-- Table: granted_permission
CREATE TABLE granted_permission
(
    permission_id int NOT NULL,
    role_id       int NOT NULL,
    CONSTRAINT granted_permission_pk PRIMARY KEY (permission_id, role_id)
);

CREATE INDEX granted_permission_idx_1 on granted_permission (permission_id ASC);

CREATE INDEX granted_permission_idx_2 on granted_permission (role_id ASC);

-- Table: nationality
CREATE TABLE nationality
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT nationality_ak_1 UNIQUE (name) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT nationality_pk PRIMARY KEY (id)
);

-- Table: order_detail
CREATE TABLE order_detail
(
    sale_order_id int   NOT NULL,
    product_id    int   NOT NULL,
    quantity      int   NOT NULL,
    unit_price    money NOT NULL,
    sub_total     money NOT NULL,
    discount_id   int   NULL,
    CONSTRAINT order_detail_pk PRIMARY KEY (product_id, sale_order_id)
);

CREATE INDEX order_detail_idx_1 on order_detail (discount_id ASC);

CREATE INDEX order_detail_idx_2 on order_detail (sale_order_id ASC);

CREATE INDEX order_detail_idx_3 on order_detail (product_id ASC);

-- Table: permission
CREATE TABLE permission
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT permission_ak_1 UNIQUE (name) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT permission_pk PRIMARY KEY (id)
);

-- Table: price_historic
CREATE TABLE price_historic
(
    id           int   NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    amount       money NOT NULL,
    date_created date  NOT NULL,
    date_expiry  date  NULL,
    product_id   int   NOT NULL,
    CONSTRAINT price_historic_pk PRIMARY KEY (id)
);

CREATE INDEX price_historic_idx_1 on price_historic (product_id ASC);

-- Table: product
CREATE TABLE product
(
    id            int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name          varchar(100) NOT NULL,
    description   varchar(500) NOT NULL,
    current_price money        NOT NULL,
    url_image     varchar(250) NOT NULL,
    brand_id      int          NOT NULL,
    category_id   int          NOT NULL,
    CONSTRAINT product_pk PRIMARY KEY (id)
);

CREATE INDEX product_idx_1 on product (brand_id ASC);

CREATE INDEX product_idx_2 on product (category_id ASC);

-- Table: role
CREATE TABLE role
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT role_ak_1 UNIQUE (name) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT role_pk PRIMARY KEY (id)
);

-- Table: sale_order
CREATE TABLE sale_order
(
    id               int  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    issue_date       date NOT NULL,
    customer_id      int  NOT NULL,
    employee_id      int  NOT NULL,
    currency_type_id int  NOT NULL,
    company_id       int  NOT NULL,
    CONSTRAINT sale_order_pk PRIMARY KEY (id)
);

CREATE INDEX order_idx_1 on sale_order (customer_id ASC);

CREATE INDEX order_idx_2 on sale_order (employee_id ASC);

CREATE INDEX order_idx_3 on sale_order (currency_type_id ASC);

CREATE INDEX order_idx_4 on sale_order (company_id ASC);

-- Table: stock
CREATE TABLE stock
(
    id         int  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    quantity   int  NOT NULL,
    updated_at date NOT NULL,
    product_id int  NOT NULL,
    CONSTRAINT stock_pk PRIMARY KEY (id)
);

CREATE INDEX stock_idx_1 on stock (product_id ASC);

-- Table: type_discount
CREATE TABLE type_discount
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT type_discount_pk PRIMARY KEY (id)
);

-- Table: user_account
CREATE TABLE user_account
(
    id                    int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    username              varchar(50)  NOT NULL,
    password_hash         varchar(250) NOT NULL,
    email                 varchar(50)  NOT NULL,
    confirmation_token    varchar(250) NULL,
    is_email_verified     boolean      NOT NULL,
    token_generation_time timestamp    NULL,
    recovery_token        varchar(250) NULL,
    recovery_token_time   timestamp    NULL,
    role_id               int          NOT NULL,
    CONSTRAINT user_account_ak_1 UNIQUE (username) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT user_account_ak_2 UNIQUE (email) NOT DEFERRABLE INITIALLY IMMEDIATE,
    CONSTRAINT user_account_pk PRIMARY KEY (id)
);

CREATE INDEX user_account_idx_1 on user_account (role_id ASC);

-- foreign keys
-- Reference: account_document_type (table: employee)
ALTER TABLE employee
    ADD CONSTRAINT account_document_type
        FOREIGN KEY (document_type_id)
            REFERENCES document_type (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: account_gender (table: employee)
ALTER TABLE employee
    ADD CONSTRAINT account_gender
        FOREIGN KEY (gender_id)
            REFERENCES gender (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: account_nationality (table: employee)
ALTER TABLE employee
    ADD CONSTRAINT account_nationality
        FOREIGN KEY (nationality_id)
            REFERENCES nationality (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: audit_log_value_audit_log_header (table: audit_log_value)
ALTER TABLE audit_log_value
    ADD CONSTRAINT audit_log_value_audit_log_header
        FOREIGN KEY (audit_log_header_id)
            REFERENCES audit_log_header (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: category_category (table: category)
ALTER TABLE category
    ADD CONSTRAINT category_category
        FOREIGN KEY (category_id)
            REFERENCES category (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: customer_document_type (table: customer)
ALTER TABLE customer
    ADD CONSTRAINT customer_document_type
        FOREIGN KEY (document_type_id)
            REFERENCES document_type (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: data_sheet_product (table: data_sheet)
ALTER TABLE data_sheet
    ADD CONSTRAINT data_sheet_product
        FOREIGN KEY (product_id)
            REFERENCES product (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: detail_attribute_detail (table: data_sheet)
ALTER TABLE data_sheet
    ADD CONSTRAINT detail_attribute_detail
        FOREIGN KEY (attribute_detail_id)
            REFERENCES attribute_detail (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: discount_category (table: discount)
ALTER TABLE discount
    ADD CONSTRAINT discount_category
        FOREIGN KEY (category_id)
            REFERENCES category (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: discount_product (table: discount)
ALTER TABLE discount
    ADD CONSTRAINT discount_product
        FOREIGN KEY (product_id)
            REFERENCES product (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: discount_type_discount (table: discount)
ALTER TABLE discount
    ADD CONSTRAINT discount_type_discount
        FOREIGN KEY (type_discount_id)
            REFERENCES type_discount (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: employee_user_account (table: employee)
ALTER TABLE employee
    ADD CONSTRAINT employee_user_account
        FOREIGN KEY (id)
            REFERENCES user_account (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: granted_permission_permission (table: granted_permission)
ALTER TABLE granted_permission
    ADD CONSTRAINT granted_permission_permission
        FOREIGN KEY (permission_id)
            REFERENCES permission (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: granted_permission_role (table: granted_permission)
ALTER TABLE granted_permission
    ADD CONSTRAINT granted_permission_role
        FOREIGN KEY (role_id)
            REFERENCES role (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: order_detail_discount (table: order_detail)
ALTER TABLE order_detail
    ADD CONSTRAINT order_detail_discount
        FOREIGN KEY (discount_id)
            REFERENCES discount (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: order_detail_product (table: order_detail)
ALTER TABLE order_detail
    ADD CONSTRAINT order_detail_product
        FOREIGN KEY (product_id)
            REFERENCES product (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: order_detail_sale_order (table: order_detail)
ALTER TABLE order_detail
    ADD CONSTRAINT order_detail_sale_order
        FOREIGN KEY (sale_order_id)
            REFERENCES sale_order (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: price_historic_product (table: price_historic)
ALTER TABLE price_historic
    ADD CONSTRAINT price_historic_product
        FOREIGN KEY (product_id)
            REFERENCES product (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: product_brand (table: product)
ALTER TABLE product
    ADD CONSTRAINT product_brand
        FOREIGN KEY (brand_id)
            REFERENCES brand (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: product_category (table: product)
ALTER TABLE product
    ADD CONSTRAINT product_category
        FOREIGN KEY (category_id)
            REFERENCES category (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: sale_order_company (table: sale_order)
ALTER TABLE sale_order
    ADD CONSTRAINT sale_order_company
        FOREIGN KEY (company_id)
            REFERENCES company (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: sale_order_currency_type (table: sale_order)
ALTER TABLE sale_order
    ADD CONSTRAINT sale_order_currency_type
        FOREIGN KEY (currency_type_id)
            REFERENCES currency_type (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: sale_order_customer (table: sale_order)
ALTER TABLE sale_order
    ADD CONSTRAINT sale_order_customer
        FOREIGN KEY (customer_id)
            REFERENCES customer (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: sale_order_employee (table: sale_order)
ALTER TABLE sale_order
    ADD CONSTRAINT sale_order_employee
        FOREIGN KEY (employee_id)
            REFERENCES employee (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: stock_product (table: stock)
ALTER TABLE stock
    ADD CONSTRAINT stock_product
        FOREIGN KEY (product_id)
            REFERENCES product (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- Reference: user_account_role (table: user_account)
ALTER TABLE user_account
    ADD CONSTRAINT user_account_role
        FOREIGN KEY (role_id)
            REFERENCES role (id)
            NOT DEFERRABLE
                INITIALLY IMMEDIATE
;

-- End of file.